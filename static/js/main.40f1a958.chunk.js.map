{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","click","event","good","Array","from","document","querySelectorAll","forEach","tr","classList","remove","currentTarget","dataset","cy","setState","closest","add","handlerClearButton","this","className","type","onClick","map","classNames","Component","ReactDOM","render","getElementById"],"mappings":"2PAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,MAAQ,SAACC,EAA4CC,GACnD,IAQO,GARSC,MAAMC,KAAKC,SAASC,iBAAiB,OAE7CC,SAAQ,SAACC,GACfA,EAAGC,UAAUC,OAAO,mCAGiB,iBAAnCT,EAAMU,cAAcC,QAAQC,IAC9B,EAAKC,SAAS,CAAEf,aAAc,MAE9B,EAAKe,SAAS,CAAEf,aAAcG,IAE9B,UAAAD,EAAMU,cAAcI,QAAQ,aAA5B,SAAmCN,UAChCO,IAAI,kCAlBb,EAsBEC,mBAAqB,WACnB,EAAKH,SAAS,CAAEf,aAAc,KAEdI,MAAMC,KAAKC,SAASC,iBAAiB,OAE7CC,SAAQ,SAACC,GACfA,EAAGC,UAAUC,OAAO,oCA5B1B,4CAgCE,WAA2B,IAAD,OAChBX,EAAiBmB,KAAKpB,MAAtBC,aAER,OACE,uBAAMoB,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGpB,EAAY,UACNA,EADM,gBAET,oBAEHA,GACC,wBACE,UAAQ,cACRqB,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,wBAKpB,uBAAOE,UAAU,QAAjB,SACE,gCACGvB,EAAM0B,KAAI,SAACpB,GACV,OACE,qBACE,UAAQ,OAERiB,UAAWI,IACA,QAATrB,GAAkB,gCAJtB,UAOE,6BACGA,IAASH,EAEN,wBACE,UAAQ,eACRqB,KAAK,SACLD,UAAU,iBACVE,QAAS,SAACpB,GACR,EAAKD,MAAMC,EAAOC,IALtB,eAYA,wBACE,UAAQ,YACRkB,KAAK,SACLD,UAAU,SACVE,QAAS,SAACpB,GACR,EAAKD,MAAMC,EAAOC,IALtB,iBAaN,oBAAI,UAAQ,YAAYiB,UAAU,eAAlC,SACGjB,MAlCEA,iBA1DvB,GAAyBsB,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACArB,SAASsB,eAAe,W","file":"static/js/main.40f1a958.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  click = (event: React.MouseEvent<HTMLButtonElement>, good: string) => {\n    const trArray = Array.from(document.querySelectorAll('tr'));\n\n    trArray.forEach((tr) => {\n      tr.classList.remove('has-background-success-light');\n    });\n\n    if (event.currentTarget.dataset.cy === 'RemoveButton') {\n      this.setState({ selectedGood: '' });\n    } else {\n      this.setState({ selectedGood: good });\n\n      event.currentTarget.closest('tr')?.classList\n        .add('has-background-success-light');\n    }\n  };\n\n  handlerClearButton = () => {\n    this.setState({ selectedGood: '' });\n\n    const trArray = Array.from(document.querySelectorAll('tr'));\n\n    trArray.forEach((tr) => {\n      tr.classList.remove('has-background-success-light');\n    });\n  };\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handlerClearButton}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    good === 'Jam' && 'has-background-success-light',\n                  )}\n                >\n                  <td>\n                    {good === selectedGood\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={(event) => {\n                            this.click(event, good);\n                          }}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={(event) => {\n                            this.click(event, good);\n                          }}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}